<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:text2db.properties" />
    <bean id="splitPremiumAmount2" class="th.co.ipassion.testtool.dto.billing.SplitPremiumAmount2" scope="prototype"/>
    <bean id="historyDownplan" class="th.co.ipassion.testtool.dto.billing.HistoryDownPlan" scope="prototype"/>
    <bean id="historyExport" class="th.co.ipassion.testtool.dto.billing.HistoryExport" scope="prototype"/>
    <bean id="memberMaster" class="th.co.ipassion.testtool.dto.billing.MemberMaster" scope="prototype"/>
	<bean id="paidHistory" class="th.co.ipassion.testtool.dto.billing.PaidHistory" scope="prototype"/>
	<bean id="cancelRefund" class="th.co.ipassion.testtool.dto.billing.CancelRefund" scope="prototype"/>

    <bean id="billingSplitPremiumAmount2Reader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources" value="${billing.source.file.path}/*SplitPremiumAmount*.txt" />
        <property name="delegate" ref="billingSplitPremiumAmount2FlatFileItemReader" />
    </bean>

    <bean id="billingSplitPremiumAmount2FlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="linesToSkip" value="1"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="splitPremiumAmount2" />
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="certno, ridername, oldridersa, newridersa, oldriderpremium, newriderpremium" />
                        <property name="delimiter" value="|"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="billingSplitPremiumAmount2Writer" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO tlpbilling.splitpremiumamount2
                    VALUES
                    (:certno, :ridername, :oldridersa, :newridersa, :oldriderpremium, :newriderpremium)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="billingHistoryDownPlanReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources" value="${billing.source.file.path}/*HistoryDownplan*.txt" />
        <property name="delegate" ref="billingHistoryDownPlanFlatFileItemReader" />
    </bean>

    <bean id="billingHistoryDownPlanFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="linesToSkip" value="1"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="historyDownplan" />
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="certno, oldproductcode, newproductcode, payperiod, newpremium, createdate, status" />
                        <property name="delimiter" value="|"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="billingHistoryDownPlanWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO tlpbilling.historydownplan
                    VALUES
                    (:certno, :oldproductcode, :newproductcode, :payperiod, :newpremium, :createdate, :status)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="billingHistoryExportReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources" value="${billing.source.file.path}/*HistoryExport*.txt" />
        <property name="delegate" ref="billingHistoryExportFlatFileItemReader" />
    </bean>

    <bean id="billingHistoryExportFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="linesToSkip" value="1"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="historyExport" />
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="billingtype, certno, billingdate, duedatestart, duedateend, installmentpolyear,
                                  payperiod, partnerbillingdate, totalpremium, status, returndate, attempttime, installmentseq,
                                  createdate, responsecode, exfileout, exfilereturn, paiddate, fileoutdate" />
                        <property name="delimiter" value="|"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="billingHistoryExportWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO tlpbilling.historyexport
                    VALUES
                    (:billingtype, :certno, :billingdate, :duedatestart, :duedateend, :installmentpolyear,
                    :payperiod, :partnerbillingdate, :totalpremium, :status, :returndate, :attempttime, :installmentseq,
                    :createdate, :responsecode, :exfileout, :exfilereturn, :paiddate, :fileoutdate)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="billingMemberMasterReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <!--waiting for file name-->
        <property name="resources" value="${billing.source.file.path}/*MemberMaster*.txt" />
        <property name="delegate" ref="tlpMemberMasterFlatFileItemReader" />
    </bean>

    <bean id="tlpMemberMasterFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="linesToSkip" value="1"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="memberMaster" />
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="policyno, certificateno, cardno, cardexpired, effectivedate, firstduedate, mobile" />
                        <property name="delimiter" value="|"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="billingMemberMasterWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO tlpbilling.membermaster
                    VALUES
                    (:policyno, :certificateno, :cardno, :cardexpired, :effectivedate, :firstduedate, :mobile)
                ]]>
            </value>
        </property>
    </bean>
    
    <bean id="billingPaidHistoryReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources" value="${billing.source.file.path}/*PaidHistory*.txt" />
        <property name="delegate" ref="tlpPaidHistoryFlatFileItemReader" />
    </bean>

    <bean id="tlpPaidHistoryFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="linesToSkip" value="1"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="paidHistory" />
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="certno, duedate, refundamount" />
                        <property name="delimiter" value="|"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="billingPaidHistoryWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO tlpbilling.paidhistory
                    VALUES
                    (:certno, :duedate, :refundamount)
                ]]>
            </value>
        </property>
    </bean>
    
    <bean id="billingCancelRefundReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources" value="${billing.source.file.path}/*CancelRefund*.txt" />
        <property name="delegate" ref="tlpCancelRefundFlatFileItemReader" />
    </bean>

    <bean id="tlpCancelRefundFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="linesToSkip" value="1"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="cancelRefund" />
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="certno, duedate, transactiondate, partial, cancelreason2, type" />
                        <property name="delimiter" value="|"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="billingCancelRefundWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO tlpbilling.cancelrefund
                    VALUES
                    (:certno, :duedate, :transactiondate, :partial, :cancelreason2, :type)
                ]]>
            </value>
        </property>
    </bean>    

	<bean id="billingBillingPost" class="th.co.ipassion.testtool.dto.dm.BillingPost" scope="prototype"/>
 
    <bean id="billingBillingPostReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${billing.source.file.path}/billingpost.txt"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="billingBillingPost" />
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="partnercode, billingtype, policyno, cert, policytype, paystatus, duedate, payperiod, postdate, billingdate, paymentdate, premium, mode, status, statusdate, attemp, attempdate"/>
                        <property name="columns"
                                  value="1-3,4-5,6-9,10-17,18-18,19-19,20-27,28-33,34-41,42-49,50-57,58-67,68-68,69-69,70-77,78-79,80-87"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="billingBillingPostWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO billing.billingpost
                    VALUES
                    (:partnercode, :billingtype, :policyno, :cert, :policytype, :paystatus, :duedate, :payperiod, :postdate, 
                    :billingdate, :paymentdate, :premium, :mode, :status, :statusdate, :attemp, :attempdate)
                ]]>
            </value>
        </property>
    </bean>   
    
    <bean id="billingMrtaKtcReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${billing.source.file.path}/mortgageKTC.txt"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="billingBillingPost" />
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="partnercode, billingtype, policyno, cert, policytype, paystatus, duedate, payperiod, postdate, billingdate, paymentdate, premium, mode, status, statusdate, attemp, attempdate" />
                        <property name="delimiter" value=":"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="billingMrtaKtcWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO billing.mortgagektc
                    VALUES
                    (:partnercode, :billingtype, :policyno, :cert, :policytype, :paystatus, :duedate, :payperiod, :postdate, 
                    :billingdate, :paymentdate, :premium, :mode, :status, :statusdate, :attemp, :attempdate)
                ]]>
            </value>
        </property>
    </bean>    
      
</beans>