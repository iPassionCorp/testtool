<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:text2db.properties"/>

    <bean id="dmCert" class="th.co.ipassion.testtool.dto.dm.Cert" scope="prototype"/>
    <bean id="dmCertLinker" class="th.co.ipassion.testtool.dto.dm.CertLinker" scope="prototype"/>
    <bean id="dmCertMapping" class="th.co.ipassion.testtool.dto.dm.CertMapping" scope="prototype"/>
    <bean id="dmCertRider" class="th.co.ipassion.testtool.dto.dm.CertRider" scope="prototype"/>
    <bean id="dmCompensateId" class="th.co.ipassion.testtool.dto.dm.CompensateId" scope="prototype"/>
    <bean id="dmCustomer" class="th.co.ipassion.testtool.dto.dm.Customer" scope="prototype"/>
    <bean id="dmDetCert" class="th.co.ipassion.testtool.dto.dm.DetCert" scope="prototype"/>
    <bean id="dmMgClaim" class="th.co.ipassion.testtool.dto.dm.MgClaim" scope="prototype"/>
    <bean id="dmMgHis" class="th.co.ipassion.testtool.dto.dm.MgHis" scope="prototype"/>
    <bean id="dmMgInsMemo" class="th.co.ipassion.testtool.dto.dm.MgInsMemo" scope="prototype"/>
    <bean id="dmMgInterest" class="th.co.ipassion.testtool.dto.dm.MgInterest" scope="prototype"/>
    <bean id="dmMgOrder" class="th.co.ipassion.testtool.dto.dm.MgOrder" scope="prototype"/>
    <bean id="dmMgPay" class="th.co.ipassion.testtool.dto.dm.MgPay" scope="prototype"/>
    <bean id="dmMgPayRider" class="th.co.ipassion.testtool.dto.dm.MgPayRider" scope="prototype"/>
    <bean id="dmMgReceiver" class="th.co.ipassion.testtool.dto.dm.MgReceiver" scope="prototype"/>
    <bean id="dmName" class="th.co.ipassion.testtool.dto.dm.Name" scope="prototype"/>
    <bean id="dmPerson" class="th.co.ipassion.testtool.dto.dm.Person" scope="prototype"/>
    <bean id="dmPolicy" class="th.co.ipassion.testtool.dto.dm.Policy" scope="prototype"/>
    <bean id="dmAddess" class="th.co.ipassion.testtool.dto.dm.Address" scope="prototype"/>
    <bean id="dmBeneficiary" class="th.co.ipassion.testtool.dto.dm.Beneficiary" scope="prototype"/>
    <bean id="dmExtrapremium" class="th.co.ipassion.testtool.dto.dm.Extrapremium" scope="prototype"/>
    <bean id="dmOrctrl" class="th.co.ipassion.testtool.dto.dm.Orctrl" scope="prototype"/>
    <bean id="dmOrdmast" class="th.co.ipassion.testtool.dto.dm.Ordmast" scope="prototype"/>
    <bean id="dmRemark" class="th.co.ipassion.testtool.dto.dm.Remark" scope="prototype"/>
    <bean id="dmRider" class="th.co.ipassion.testtool.dto.dm.Rider" scope="prototype"/>
    <bean id="dmRprider" class="th.co.ipassion.testtool.dto.dm.Rprider" scope="prototype"/>

    <!--edm4gl-->
    <bean id="dmClaim" class="th.co.ipassion.testtool.dto.dm.Claim" scope="prototype"/>
    <bean id="dmEclm" class="th.co.ipassion.testtool.dto.dm.Eclm" scope="prototype"/>
    <bean id="dmDthordo" class="th.co.ipassion.testtool.dto.dm.Dthordo" scope="prototype"/>
    <bean id="dmRidordo" class="th.co.ipassion.testtool.dto.dm.Ridordo" scope="prototype"/>
    <bean id="dmDhsordo" class="th.co.ipassion.testtool.dto.dm.Dhsordo" scope="prototype"/>
    <bean id="dmBnfordo" class="th.co.ipassion.testtool.dto.dm.Bnfordo" scope="prototype"/>
    <bean id="dmOacm" class="th.co.ipassion.testtool.dto.dm.Oacm" scope="prototype"/>
    <bean id="dmHordods" class="th.co.ipassion.testtool.dto.dm.Hordods" scope="prototype"/>
    <bean id="dmPay" class="th.co.ipassion.testtool.dto.dm.Pay" scope="prototype"/>
    <bean id="dmInsmemo" class="th.co.ipassion.testtool.dto.dm.Insmemo" scope="prototype"/>
    <bean id="dmVoiordo" class="th.co.ipassion.testtool.dto.dm.Voiordo" scope="prototype"/>
    <bean id="dmCmem" class="th.co.ipassion.testtool.dto.dm.Cmem" scope="prototype"/>
    <bean id="dmOdis" class="th.co.ipassion.testtool.dto.dm.Odis" scope="prototype"/>
    <bean id="dmOrds" class="th.co.ipassion.testtool.dto.dm.Ords" scope="prototype"/>
    <bean id="dmHospital" class="th.co.ipassion.testtool.dto.dm.Hospital" scope="prototype"/>
    <bean id="dmIcd10" class="th.co.ipassion.testtool.dto.dm.Icd10" scope="prototype"/>

    <!--edm4cf-->
    <bean id="dmQueue" class="th.co.ipassion.testtool.dto.dm.Queue" scope="prototype"/>

    <!--new dm.migration-->
    <bean id="dmTlpMigration" class="th.co.ipassion.testtool.dto.dm.TlpMigration" scope="prototype"/>

    <bean id="dmCompensateIdReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/compensateid.dat"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmCompensateId"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names" value="compensateid,referenceid"/>
                        <property name="columns" value="1-13,14-26"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmCompensateIdWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.compensateid
                    VALUES
                    (:compensateid, :referenceid)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmCustomerReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/customer.dat"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmCustomer"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="customerid,referenceid,referencetype,birthdate,sex,contactnameid,contactaddressid"/>
                        <property name="columns" value="1-13,14-26,27-28,29-36,37-37,38-50,51-60"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmCustomerWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.customer
                    VALUES
                    (:customerid, :referenceid, :referencetype, :birthdate, :sex, :contactnameid, :contactaddressid)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmNameReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/name.dat"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmName"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="nameid,personid,prename,firstname,lastname,startdate"/>
                        <property name="columns" value="1-13,14-26,27-56,57-86,87-116,117-124"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmNameWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.name
                    VALUES
                    (:nameid, :personid, :prename, :firstname, :lastname, :startdate)
                ]]>
            </value>
        </property>
    </bean>


    <bean id="dmPersonReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/person.dat"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmPerson"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="personid,referenceid,referencetype,birthdate,sex,customerid,bluecard,reserve"/>
                        <property name="columns"
                                  value="1-13,14-26,27-28,29-36,37-37,38-50,51-51,52-57"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmPersonWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.person
                    VALUES
                    (:personid, :referenceid, :referencetype, :birthdate, :sex, :customerid, :bluecard, :reserve)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmPolicyReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/mortpolicy1.dat"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmPolicy"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="policyno,rate,name,type,effectivedate,planname,riderplan,tlbranch"/>
                        <property name="columns" value="1-4,5-6,7-56,57-57,58-65,66-125,126-126,127-129"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmPolicyWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.policy
                    VALUES
                    (:policyno, :rate, :name, :type, :effectivedate, :planname, :riderplan, :tlbranch)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmCertReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/newcert.dat"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmCert"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="policyno,certno,appno,reqdate,nameid,age,smi,lifesum,accidentsum,period,loan_term,lifepremium,extrapremium,tpdpremium,extratpdpremium,addpremium,
                                em,tpd,effectivedate,maturedate,premiumdate,certyyyymm,statcer,statcer2,statdate2,informdate1,paydate1,amount1,informdate2,paydate2,amount2,deaddate,endownmentyear,deadcause,
                                receiptflag,referenceno,reserve,mode,payperiod,rpno,statdate1,
                                oldstatcert1,oldstatcert2,oldstatcertdate1,oldstatcertdate2"/>
                        <!--Add certno waiting for numbering of columns-->
                        <property name="columns"
                                  value="1-4,5-12,13-24,25-32,33-45,46-47,48-56,57-65,66-74,75-76,77-78,79-88,89-98,99-108,109-118,119-128,129-131,132-135,136-143,144-151,152-159,160-165,166-166,167-167,168-175,176-183,184-191,192-201,202-209,210-217,218-227,228-235,236-242,243-246,247-247,248-267,268-269"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmCertWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.cert
                    VALUES
                    (:policyno, :certno, :appno, :reqdate, :nameid, :age, :smi, :lifesum, :accidentsum, :period, :loan_term, :lifepremium, 
                    :extrapremium, :tpdpremium, :extratpdpremium, :addpremium, :em, :tpd, :effectivedate, :maturedate, :premiumdate, :certyyyymm, 
                    :statcer, :statcer2, :statdate2, :informdate1, :paydate1, :amount1, :informdate2, :paydate2, :amount2, :deaddate, :endownmentyear, 
                    :deadcause, :receiptflag, :referenceno, :reserve, :mode,:payperiod,:rpno,:statdate1,
                    :oldstatcert1,:oldstatcert2,:oldstatcertdate1,:oldstatcertdate2)
                ]]>
            </value>
        </property>
    </bean>


    <bean id="dmDetCertReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/newdetcert2.dat"/>
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmDetCert"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="policyno,certno,code,address1,address2,telephoneno,mariagestatus,recname1,percent1,relationshipcode1,recname2,percent2,relationshipcode2,recname3,percent3,
relationshipcode3,analist,prmiseno,prmiseno2,loantype,med,reserve"/>
                        <property name="columns"
                                  value="1-4,5-12,13-22,23-92,93-162,163-222,223-223,224-323,324-328,329-330,331-430,431-435,436-437,438-537,538-542,543-544,545-554,555-566,567-578,579-579,580-580,581-581"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmDetCertProcessor" class="th.co.ipassion.testtool.processor.dm.DetCertProcessor"/>

    <bean id="dmDetCertWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.detcert
                    VALUES
                    (:policyno, :certno, :code, :address1, :address2, :telephoneno, :mariagestatus, 
                    :recname1, :percent1, :relationshipcode1, :recname2, :percent2, :relationshipcode2, :recname3, :percent3, :relationshipcode3, 
                    :analist, :prmiseno, :prmiseno2, :loantype, :med, :reserve)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmCertRiderReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/certrider.dat"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmCertRider"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="policyno,certno,ridertype,sum,premium,extrapremium,riderstatus,riderstatusdate,reserve"/>
                        <property name="columns"
                                  value="1-4,5-12,13-15,16-24,25-34,35-44,45-45,46-53,54-54"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmCertRiderWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.certrider
                    VALUES
                    (:policyno, :certno, :ridertype, :sum, :premium, :extrapremium, :riderstatus, :riderstatusdate, :reserve)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmCertLinkerReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/certlinker.dat"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmCertLinker"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names" value="policynohp,certnohp,policynocp,certnocp"/>
                        <property name="columns" value="1-4, 5-12, 13-16, 17-24"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmCertLinkerWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.certlinker
                    VALUES
                    (:policynohp, :certnohp, :policynocp, :certnocp)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmCertMappingReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/certmapping.dat"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmCertMapping"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names" value="policyno,certno,rpolicyno,rcertno"/>
                        <property name="columns" value="1-4, 5-12, 13-20, 21-35"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmCertMappingWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.certmapping
                    VALUES
                    (:policyno, :certno, :rpolicyno, :rcertno)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmMgClaimReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/mgclaim.dat"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmMgClaim"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="certno,accidentdate,receivedate,claimtype,sectioncode,orderno,referenceno,linkerno,okdate,policyno,ismigration"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-25,26-27,28-35,36-45,46-52,53-60,61-64,65-65"/>

                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmMgClaimWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.mgclaim
                    VALUES
                    (:certno, :accidentdate, :receivedate, :claimtype, :sectioncode, :orderno, :referenceno, :linkerno, :okdate, :policyno, :ismigration)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmMgOrderReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/mgorder*.dat"/>
        <property name="delegate" ref="dmMgOrderFlatFileItemReader"/>
    </bean>

    <bean id="dmMgOrderFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmMgOrder"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="sectioncode,orderno,receivetime,causecode,causedetail,receiverid,considerid,admitdate,admitflag,billingorderno,interimflag,hospitalcode,receivedocdate,calsurdate"/>
                        <property name="columns"
                                  value="1-2,3-10,11-16,17-22,23-72,73-79,80-86,87-94,95-95,96-105,106-106,107-110,111-118,119-126"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmMgOrderWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.mgorder
                    VALUES
                    (:sectioncode, :orderno, :receivetime, :causecode, :causedetail, :receiverid, :considerid, :admitdate, :admitflag, :billingorderno, 
                    :interimflag, :hospitalcode, :receivedocdate, :calsurdate)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmMgPayReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/mgpay/mgpay*.dat"/>
        <property name="delegate" ref="dmMgPayFlatFileItemReader"/>
    </bean>

    <bean id="dmMgPayFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmMgPay"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="certno,receivedate, accidentdate,sectioncode,orderno,policystatus,policystatusdate,policystatus2,policystatusdate2,branchcode,servicebranch,claimtype,paytype,proofinsuredage,disabilitytype,disnumber,
payrate,payamount,accdamount,surrenderamount,returnamount,deductamount,claimokdate,claimpaydate,allowtype"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-26,27-34,35-35,36-43,44-44,45-52,53-55,56-58,59-59,60-60,61-62,63-63,64-64,65-67,68-79,80-91,92-103,104-115,116-127,128-135,136-143,144-144"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmMgPayWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.mgpay
                    VALUES
                    (:certno, :receivedate, :accidentdate, :sectioncode, :orderno, :policystatus, :policystatusdate, :policystatus2, :policystatusdate2, 
                    :branchcode, :servicebranch, :claimtype, :paytype, :proofinsuredage, :disabilitytype, :disnumber, :payrate, :payamount, 
                    :accdamount, :surrenderamount, :returnamount, :deductamount, :claimokdate, :claimpaydate, :allowtype)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmMgPayRiderReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/mgpayrider/mgpayrider*.dat"/>
        <property name="delegate" ref="dmMgPayRiderFlatFileItemReader"/>
    </bean>

    <bean id="dmMgPayRiderFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmMgPayRider"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="certno,accidentdate, receivedate, sectioncode,orderno,policystatus,policystatusdate,policystatus2,policystatusdate2,branchcode,servicebranch,amestartdate,ameday,
ameexpense,amepayment,tdday,tdstartdate,tdpayment, returnamount,deductamount,voiddate,claimokdate,claimpaydate"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-26,27-34,35-35,36-43,44-44,45-52,53-55,56-58,59-66,67-69,70-78,79-87,88-90,91-98,99-107,108-119,120-131,132-139,140-147,148-155"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmMgPayRiderWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.mgpayrider
                    VALUES
                    (:certno, :accidentdate, :receivedate, :sectioncode, :orderno, :policystatus, :policystatusdate, :policystatus2, :policystatusdate2, 
                    :branchcode, :servicebranch, :amestartdate, :ameday, :ameexpense, :amepayment, :tdday, :tdstartdate, :tdpayment, :returnamount, :deductamount, 
                    :voiddate, :claimokdate, :claimpaydate)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmMgHisReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/mghis*.dat"/>
        <property name="delegate" ref="dmMgHisFlatFileItemReader"/>
    </bean>

    <bean id="dmMgHisFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmMgHis"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="certno,accidentdate,receivedate,claimtype,seqno,remarkdate,remarkno,remark,employeeid,rectime"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-25,26-27,28-35,36-37,38-137,138-144,145-150"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmMgHisWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.mghis
                    VALUES
                    (:certno, :accidentdate, :receivedate, :claimtype, :seqno, :remarkdate, :remarkno, :remark, :employeeid, :rectime)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmMgInsMemoReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/mginsmemo.dat"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmMgInsMemo"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="certno,accidentdate,receivedate,memocode,detail1,detail2,savedate"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-27,28-127,128-227,228-235"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmMgInsMemoWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.mginsmemo
                    VALUES
                    (:certno, :accidentdate, :receivedate, :memocode, :detail1, :detail2, :savedate)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmMgInterestReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/mginterest*.dat"/>
        <property name="delegate" ref="dmMgInterestFlatFileItemReader"/>
    </bean>

    <bean id="dmMgInterestFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmMgInterest"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="certno,accidentdate,receivedate,ridertype,paytype,startdate,enddate,day,payamount,interestamount"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-27,28-28,29-36,37-44,45-48,49-60,61-71"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmMgInterestWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.mginterest
                    VALUES
                    (:certno, :accidentdate, :receivedate, :ridertype, :paytype, :startdate, :enddate, :day, :payamount, :interestamount)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmMgReceiverReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/mgreceiver*.dat"/>
        <property name="delegate" ref="dmMgReceiverFlatFileItemReader"/>
    </bean>

    <bean id="dmMgReceiverFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="main.java.th.co.ipassion.testtool.job.CutLinePolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmMgReceiver"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="names"
                                  value="certno,accidentdate,receivedate,seqno,prename,firstname, lastname,type,payamount,address,tumbon,zipcode,mobilephone,citizenid,paytype,banktype,bankcode,
bankbranch,bankaccount,guardianbeneficiary,ispay,haveindicia,countrycode,claimpaydate, bookstatus,chqdate,chqno,docno,isbeneficiarykilled,birthdate"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-25,26-55,56-115,116-175,176-176,177-188,189-316,317-321,322-326,327-336,337-349,350-350,351-351,352-361,362-396,397-411,412-491,492-492,493-493,
494-496,497-504,505-505,506-513,514-523,524-528,529-529,530-537"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmMgReceiverProcessor" class="th.co.ipassion.testtool.processor.dm.MgReceiverProcessor"/>

    <bean id="dmMgReceiverWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.mgreceiver
                    VALUES
                    (:certno, :accidentdate, :receivedate, :seqno, :prename, :firstname, :lastname, :type, :payamount, 
                    :address, :tumbon, :zipcode, :mobilephone, :citizenid, :paytype, :banktype, :bankcode, :bankbranch, :bankaccount, 
                    :guardianbeneficiary, :ispay, :haveindicia, :countrycode, :claimpaydate, :bookstatus, 
                    :chqdate, :chqno, :docno, :isbeneficiarykilled, :birthdate)
                ]]>
            </value>
        </property>
    </bean>
    <bean id="dmAddressReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmAddress"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="addressid,address,tumbon,zipcode,startdate"/>
                        <property name="columns"
                                  value="1-10,11-138,139-143,144-148,149-156"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmAddressWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.address
                    VALUES
                    (:addressid,:address,:tumbon,:zipcode,:startdate)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmBeneficiaryReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/"/>
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmBeneficiary"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="policytype,policyno,sequence,prename,firstname,lastname,relationshipcode,percentshare,personflag,idno,birthdate"/>
                        <property name="columns"
                                  value="1-1,2-7,8-8,9-38,39-68,69-98,99-100,101-105,106-106,107-119,120-127"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmBeneficiaryWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.beneficiary
                    VALUES
                    (:policytype,:policyno,:sequence,:prename,:firstname,:lastname,:relationshipcode,:percentshare,:personflag,:idno,:birthdate)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmExtrapremiumReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmExtrapremium"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="policyno,extratype,startyear,noofyear,startdate,extrapremium,mode,emrate,epfromem,epunderwrt"/>
                        <property name="columns"
                                  value="1-8,9-11,12-13,14-15,16-23,24-31,32-32,33-36,37-42,43-47"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmExtrapremiumWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.extrapremium
                    VALUES
                    (:policyno,:extratype,:startyear,:noofyear,:startdate,:extrapremium,:mode,:emrate,:epfromem,:epunderwrt)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmOrctrlReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmOrctrl"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="rpno,policyno,certno,effectivedate,payperiod,paydate,premium,extraprem,
                                                sysdate,currentstatus,originalstatus,mode,time,requestdate,submitno,
                                                graceperiod,printeddate,submitbranch,userid,reasoncode,moneyok"/>
                        <!--Add certno waiting for numbering of columns-->
                        <property name="columns"
                                  value="1-12,13-20,21-28,29-32,33-40,41-49,50-57,58-65,66-66,67-67,68-68,69-69,70-77,78-89,90-90,91-98,99-101,102-108,109-110,111-111"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmOrctrlWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.orctrl
                    VALUES
                    (:rpno,:policyno,:effectivedate,:payperiod,:paydate,:premium,:extraprem,
                    :sysdate,:currentstatus,:originalstatus,:mode,:time,:requestdate,:submitno,
                    :graceperiod,:printeddate,:submitbranch,:userid,:reasoncode,:moneyok)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmOrdmastReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmOrdmast"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="policyno,nameid,branch,salesid,occupationtype,occupationcode,plancode,
                                            effectivedate,policystatus1,policystatus2,policystatusdate1,policystatusdate2,
                                            oldpolicystatus1,oldpolicystatus2,oldpolicystatusdate1,oldpolicystatusdate2,
                                            insuredage,sum,lifepremium,mode,payperiod,rpno,paydate,duedate,remark,
                                            planpa,hivflag,lapseflag,tabianlapseflag,medical,_class,benefitrate,contactaddressid,
                                            contactstartdate,localaddressid,invalid,saleschannel"/>
                        <property name="columns"
                                  value="1-8,9-21,22-24,25-34,35-35,36-37,38-41,42-49,50-50,51-51,52-59,60-67,68-68,69-69,70-77,78-85,86-87,88-96,97-105,106-106,107-110,111-122,123-130,131-138,139-139,140-140,141-141,142-142,143-143,144-144,145-145,146-148,149-158,159-166,167-176,177-177,178-178"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmOrdmastWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.ordmast
                    VALUES
                    (:policyno,:nameid,:branch,:salesid,:occupationtype,:occupationcode,:plancode,
                    :effectivedate,:policystatus1,:policystatus2,:policystatusdate1,:policystatusdate2,
                    :oldpolicystatus1,:oldpolicystatus2,:oldpolicystatusdate1,:oldpolicystatusdate2,
                    :insuredage,:sum,:lifepremium,:mode,:payperiod,:rpno,:paydate,:duedate,:remark,
                    :planpa,:hivflag,:lapseflag,:tabianlapseflag,:medical,:_class,:benefitrate,:contactaddressid,
                    :contactstartdate,:localaddressid,:invalid,:saleschannel)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmRemarkReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmRemark"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="policyno,department,sequence"/>
                        <property name="columns"
                                  value="1-8,9-10,11-13,14-113"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmRemarkWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.remark
                    VALUES
                    (:policyno,:department,:sequence)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmRiderReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmRider"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="policyno,ridertype,ridersum,riderpremium,riderstatus,riderstatusdate,effectivedate,marker"/>
                        <property name="columns"
                                  value="1-8,9-11,12-20,21-29,30-30,31-38,39-46,47-47"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmRiderWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.rider
                    VALUES
                    (:policyno,:ridertype,:ridersum,:riderpremium,:riderstatus,:riderstatusdate,:effectivedate,:marker)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmRpriderReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmRprider"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="rpno,seqno,ridertext,extrapremium"/>
                        <!--Add certno waiting for numbering of columns-->
                        <property name="columns"
                                  value="1-12,13-13,14-136"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmRpriderWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.rprider
                    VALUES
                    (:rpno,:seqno,:ridertext,:extrapremium)
                ]]>
            </value>
        </property>
    </bean>

    <!--edm4gl-->
    <bean id="dmClaimReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/claim.dat"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmClaim"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="claimType,mstType,policyNo,receiveyyyymm,sectionCode,orderNo,referenceNo,okDate"/>
                        <property name="columns"
                                  value="1-1,2-2,3-10,11-16,17-18,19-26,27-36,37-44"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmClaimWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.claim
                    VALUES
                    (:claimType,:mstType,:policyNo,:receiveyyyymm,:sectionCode,:orderNo,:referenceNo,:okDate)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmEclmReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/eclm*.dat"/>
        <property name="delegate" ref="dmEclmFlatFileItemReader"/>
    </bean>

    <bean id="dmEclmFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmEclm"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="sectionCode,orderNo,claimType,receiveTime,causeCode1,causeDetail1,causeCode2,
                                  causeDetail2,specialCauseFlag,hospitalCode,psysicianCertificate,admitFlag,
                                  admitStartDate,investigationCode1,investigationCode2,investigationCode3,treatmentCode1,treatmentCode2,
                                  treatmentCode3,notation,receiverID,precertConsiderID,considerID,linkSectionOrder,marketAmount,saveAmount,
                                  provinceCode,payLimit,interestClaim,interestPayStart,
                                  interestPolicy,branchConsiderID,branchUserID,pureAccidentFlag,
                                  severeAccidentFlag,medicalProcedure,screeningAssessor,checkerID,automateFlag,rbDays,icuDays,isVip"/>
                        <property name="columns"
                                  value="1-2,3-10,11-11,12-17,18-23,24-73,74-79,80-129,130-130,131-134,135-140,
                                  141-141,142-149,150-151,152-153,154-155,156-162,163-169,170-176,177-276,
                                  277-283,284-290,291-297,298-307,308-317,318-327,328-329,330-339,340-348,
                                  349-356,357-364,365-371,372-378,379-379,380-380,381-383,384-390,391-397,
                                  398-398,399-401,402-404,405-405"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmEclmWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.eclm
                    VALUES
                    (:sectionCode,:orderNo,:claimType,:receiveTime,:causeCode1,:causeDetail1,:causeCode2,:causeDetail2,:specialCauseFlag,:hospitalCode,:psysicianCertificate,:admitFlag,
                    :admitStartDate,:investigationCode1,:investigationCode2,:investigationCode3,:treatmentCode1,:treatmentCode2,:treatmentCode3,:notation,:receiverID,
                    :precertConsiderID,:considerID,:linkSectionOrder,:marketAmount,:saveAmount,:provinceCode,:payLimit,:interestClaim,:interestPayStart,
                    :interestPolicy,:branchConsiderID,:branchUserID,:pureAccidentFlag,:severeAccidentFlag,:medicalProcedure,:screeningAssessor,:checkerID,:automateFlag,:rbDays,:icuDays,:isVip)
                ]]>
            </value>
        </property>
    </bean>
    <bean id="dmDthordoReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/odth*.dat"/>
        <property name="delegate" ref="dmDthordoFlatFileItemReader"/>
    </bean>

    <bean id="dmDthordoFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmDthordo"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="policyNo,receiveDate,accidentDate,sectionCode,orderNo,policyStatus1,policyStatusDate1,policyStatus2,
                        policyStatusDate2,proofInsuredAge,branch,lCode,mode,payLastPeriod,payLastDate,payPeriod,payDate,aplStartDate,
                        aplEndDate,extendStartDate,extendEndDate,expireDate,renewalDate,renewalPayPeriod,expireDateBeforeRenewal,serviceBranch,
                        serviceUnit,claimOkDate,claimPayDate,claimPayType,payLifeSum,payRiderSum,rejectFlag,rejectAmount,rejectDate,
                        claimPersonCode,interestClaim,interestPayStart,dependentType,dependentSequence,paAccidentDate,firstClaimPayDate,effectiveDate,
                        calSurCash,planCode,unitCode,oicSeqType,payLifeSumType"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-26,27-34,35-35,36-43,44-44,45-52,53-54,55-57,58-60,61-61,62-67,68-75,76-81,82-89,90-97,98-105,106-113,114-121,122-129,130-137,138-143,144-151,152-154,155-162,163-170,171-178,179-179,180-191,192-203,204-204,205-216,217-224,225-225,226-234,235-242,243-243,244-245,246-253,254-261,262-269,270-270,271-274,275-282,283-283,284-284"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmDthordoWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.dthordo
                    VALUES
                    (:policyNo,:receiveDate,:accidentDate,:sectionCode,:orderNo,:policyStatus1,:policyStatusDate1,:policyStatus2,
                        :policyStatusDate2,:proofInsuredAge,:branch,:lCode,:mode,:payLastPeriod,:payLastDate,:payPeriod,:payDate,:aplStartDate,
                        :aplEndDate,:extendStartDate,:extendEndDate,:expireDate,:renewalDate,:renewalPayPeriod,:expireDateBeforeRenewal,:serviceBranch,
                        :serviceUnit,:claimOkDate,:claimPayDate,:claimPayType,:payLifeSum,:payRiderSum,:rejectFlag,:rejectAmount,:rejectDate,
                        :claimPersonCode,:interestClaim,:interestPayStart,:dependentType,:dependentSequence,:paAccidentDate,:firstClaimPayDate,:effectiveDate,
                        :calSurCash,:planCode,:unitCode,:oicSeqType,:payLifeSumType)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmRidordoReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/orid*.dat"/>
        <property name="delegate" ref="dmRidordoFlatFileItemReader"/>
    </bean>

    <bean id="dmRidordoFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmRidordo"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="policyNo,receiveDate,riderType,riderAmount"/>
                        <property name="columns"
                                  value="1-8,9-16,17-19,20-30"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmRidordoWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.ridordo
                    VALUES
                    (:policyNo,:receiveDate,:riderType,:riderAmount)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmDhsordoReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/odhs*.dat"/>
        <property name="delegate" ref="dmDhsordoFlatFileItemReader"/>
    </bean>

    <bean id="dmDhsordoFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmDhsordo"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="policyNo,receiveDate,seqNo,remarkDate,remarkNo,remark,employeeID,recTime"/>
                        <property name="columns"
                                  value="1-8,9-16,17-18,19-26,27-28,29-128,129-135,136-141"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmDhsordoWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.dhsordo
                    VALUES
                    (:policyNo,:receiveDate,:seqNo,:remarkDate,:remarkNo,:remark,:employeeID,:recTime)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmBnfordoReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/obnf*.dat"/>
        <property name="delegate" ref="dmBnfordoFlatFileItemReader"/>
    </bean>

    <bean id="dmBnfordoFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmBnfordo"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="policyNo,receiveDate,seqNo,preName,firstName,lastName,relationship,isMurderer,no,type,percentShare,payAmount,
                                            address,tumbon,zipCode,mobilePhone,citizenID,payType,bankCode,
                                            bankBranch,bankAccount,guardianBeneficiary,isPay,birthDate,haveIndicia,countryCode"/>
                        <property name="columns"
                                  value="1-8,9-16,17-17,18-47,48-107,108-167,168-168,169-169,170-170,171-171,172-176,177-188,189-316,317-321,322-326,327-336,337-349,350-350,351-360,361-395,396-410,411-490,491-491,492-499,500-500,501-503"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmBnfordoWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.bnfordo
                    VALUES
                    (:policyNo,:receiveDate,:seqNo,:preName,:firstName,:lastName,:relationship,:isMurderer,:no,:type,:percentShare,:payAmount,
                    :address,:tumbon,:zipCode,:mobilePhone,:citizenID,:payType,:bankCode,
                    :bankBranch,:bankAccount,:guardianBeneficiary,:isPay,:birthDate,:haveIndicia,:countryCode)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmOacmReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/oacm*.dat"/>
        <property name="delegate" ref="dmOacmFlatFileItemReader"/>
    </bean>

    <bean id="dmOacmFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmOacm"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="policyNo,accidentDate,receiveDate,sectionCode,orderNo,policyStatus1,policyStatusDate1,
                                policyStatus2,policyStatusDate2,branch,lCode,unitCode,mode,payPeriod,payDate,aplStartDate,
                                aplEndDate,extendStartDate,extendEndDate,expireDate,renewalDate,renewalPayPeriod,expireDateBeforeRenewal,
                                serviceBranch,serviceUnit,claimOkDate,claimPayDate,claimPersonCode,dependentType,dependentSequence,firstClaimPayDate,effectiveDate,planCode"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-26,27-34,35-35,36-43,44-44,45-52,53-55,56-58,59-66,67-67,68-71,72-79,80-87,88-95,96-103,104-111,112-119,120-127,128-131,132-139,140-142,143-150,151-158,159-166,167-167,168-168,169-170,171-178,179-186,187-190"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmOacmWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.oacm
                    VALUES
                    (:policyNo,:accidentDate,:receiveDate,:sectionCode,:orderNo,:policyStatus1,:policyStatusDate1,
                    :policyStatus2,:policyStatusDate2,:branch,:lCode,:unitCode,:mode,:payPeriod,:payDate,:aplStartDate,
                    :aplEndDate,:extendStartDate,:extendEndDate,:expireDate,:renewalDate,:renewalPayPeriod,:expireDateBeforeRenewal,
                    :serviceBranch,:serviceUnit,:claimOkDate,:claimPayDate,:claimPersonCode,:dependentType,:dependentSequence,:firstClaimPayDate,:effectiveDate,:planCode)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmHordodsReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/ohds*.dat"/>
        <property name="delegate" ref="dmHordodsFlatFileItemReader"/>
    </bean>

    <bean id="dmHordodsFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmHordods"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="policyNo,accidentDate,receiveDate,seqNo,remarkDate,remarkNo,remark,employeeID,recTime"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-26,27-34,35-36,37-136,137-143,144-149"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmHordodsWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.hordods
                    VALUES
                    (:policyNo,:accidentDate,:receiveDate,:seqNo,:remarkDate,:remarkNo,:remark,:employeeID,:recTime)
                ]]>
            </value>
        </property>
    </bean>


    <bean id="dmPayReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/pay*.dat"/>
        <property name="delegate" ref="dmPayFlatFileItemReader"/>
    </bean>

    <bean id="dmPayFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmPay"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="sectionCode,orderNo,payType,bankCode,bankBranch,bankAccount"/>
                        <property name="columns"
                                  value="1-2,3-10,11-11,12-21,22-56,57-71"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmPayWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.pay
                    VALUES
                    (:sectionCode,:orderNo,:payType,:bankCode,:bankBranch,:bankAccount)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmInsmemoReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/insmemo*.dat"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmInsmemo"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="claimType,mstType,policyNo,accidentDate,receiveDate,memoCode,detail1,detail2,saveDate"/>
                        <property name="columns"
                                  value="1-1,2-2,3-10,11-18,19-26,27-29,30-129,130-229,230-237"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmInsmemoWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.insmemo
                    VALUES
                    (:claimType,:mstType,:policyNo,:accidentDate,:receiveDate,:memoCode,:detail1,:detail2,:saveDate)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmVoiordoReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/ovoi*.dat"/>
        <property name="delegate" ref="dmVoiordoFlatFileItemReader"/>
    </bean>

    <bean id="dmVoiordoFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmVoiordo"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="claimType,policyNo,accidentDate,receiveDate,riderType,voidType,voidDate,voidAmount,
                    voidFirstPeriod,premType,tellBookStatus,endorsementStatus,debtFlag,startDate,endDate,addPremium"/>
                        <property name="columns"
                                  value="1-1,2-9,10-17,18-25,26-28,29-29,30-37,38-48,49-54,55-55,56-56,57-57,58-58,59-66,67-74,75-84"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmVoiordoWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.voiordo
                    VALUES
                    (:claimType,:policyNo,:accidentDate,:receiveDate,:riderType,:voidType,:voidDate,:voidAmount,
                    :voidFirstPeriod,:premType,:tellBookStatus,:endorsementStatus,:debtFlag,:startDate,:endDate,:addPremium)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmCmemReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/cmem*.dat"/>
        <property name="delegate" ref="dmCmemFlatFileItemReader"/>
    </bean>

    <bean id="dmCmemFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmCmem"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="sectionCode,orderNo,seqNo,detail"/>
                        <property name="columns"
                                  value="1-2,3-10,11-11,12-211"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmCmemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.cmem
                    VALUES
                    (:sectionCode,:orderNo,:seqNo,:detail)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmOdisReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/odis*.dat"/>
        <property name="delegate" ref="dmOdisFlatFileItemReader"/>
    </bean>

    <bean id="dmOdisFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmOdis"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="policyNo,accidentDate,receiveDate,riderType,organFlag,organ,exceptFlag,exceptStartDate,
                                exceptEndDate,exceptStartPeriod,eexceptEndPeriod,premiumFlag,premiumAmount,premiumStartDate,
                                premiumEndDate,allowPeriod,allowance,allowStartDate,premiumInterest,premIntStartDate,premIntEndDate,riderSurcash"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-27,28-28,29-43,44-44,45-52,53-60,61-64,65-68,69-69,70-79,80-87,88-95,96-97,98-108,109-116,117-126,127-134,135-142,143-150"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmOdisWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.odis
                    VALUES
                    (:policyNo,:accidentDate,:receiveDate,:riderType,:organFlag,:organ,:exceptFlag,:exceptStartDate,
                    :exceptEndDate,:exceptStartPeriod,:eexceptEndPeriod,:premiumFlag,:premiumAmount,:premiumStartDate,
                    :premiumEndDate,:allowPeriod,:allowance,:allowStartDate,:premiumInterest,:premIntStartDate,:premIntEndDate,:riderSurcash)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmOrdsReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader">
        <property name="resources"
                  value="${dm.source.file.path}/ords*.dat"/>
        <property name="delegate" ref="dmOrdsFlatFileItemReader"/>
    </bean>

    <bean id="dmOrdsFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="th.co.ipassion.testtool.job.CutLinePolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmOrds"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict"
                                  value="false"/>
                        <property name="names"
                                  value="policyNo,accidentDate,receiveDate,riderType,riderSum,riderPay,payRate,causeType"/>
                        <property name="columns"
                                  value="1-8,9-16,17-24,25-27,28-36,37-47,48-50,51-52"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmOrdsWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.ords
                    VALUES
                    (:policyNo,:accidentDate,:receiveDate,:riderType,:riderSum,:riderPay,:payRate,:causeType)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmHospitalReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/hospital.dat"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmHospital"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="code,prename,name,company,address1,address2,paytype,zone,level,informalrecordexpense,
                    istlmedicarehospital,istlmedicaredate,fax1,extensionfax1,fax2,extensionfax2,incomingfax1,incomingfax2,ipdright,ipdrightdate,
                    opdright,opdrightdate,incomingfax3,incomingfax4,incomingfax5,incomingfax6,showhospitalname,formalrecordexpense,email1,
                    email2,email3,email4,sendemail1,sendemail2,sendemail3,sendemail4,automate,isstricthospital,recorddate,recordid"/>
                        <property name="columns"
                                  value="1-4,5-24,25-84,85-144,145-194,195-244,245-245,246-246,247-247,248-251,252-252,253-260,261-269,270-273,274-282,283-286,287-295,296-304,305-305,306-313,314-314,315-322,323-331,332-340,341-349,350-358,359-359,360-363,364-463,464-563,564-663,664-763,764-863,864-963,964-1063,1064-1163,1164-1164,1165-1165,1166-1173,1174-1180"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmHospitalWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.hospital
                    VALUES
                    (:code,:prename,:name,:company,:address1,:address2,:paytype,:zone,:level,:informalrecordexpense,
                    :istlmedicarehospital,:istlmedicaredate,:fax1,:extensionfax1,:fax2,:extensionfax2,:incomingfax1,:incomingfax2,:ipdright,:ipdrightdate,
                    :opdright,:opdrightdate,:incomingfax3,:incomingfax4,:incomingfax5,:incomingfax6,:showhospitalname,:formalrecordexpense,:email1,
                    :email2,:email3,:email4,:sendemail1,:sendemail2,:sendemail3,:sendemail4,:automate,:isstricthospital,:recorddate,:recordid)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmIcd10Reader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/icd10.dat"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmIcd10"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="code,detail1,detail2,illnesscode,rangeofstay,isicd10,keyword,simpledisease,deadlydisease"/>
                        <property name="columns"
                                  value="1-6,7-56,57-106,107-107,108-110,111-111,112-131,132-132,133-133"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmIcd10Writer" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.icd10
                    VALUES
                    (:code,:detail1,:detail2,:illnesscode,:rangeofstay,:isicd10,:keyword,:simpledisease,:deadlydisease)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmQueueReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmQueue"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="considerid,queuetype,jobtype,jobcode,offerdate,referenceno,receivedate,modifydate,modifytime,status,
xconsiderid,firstjobtype,firstjobcode,firstxconsiderid,firstofferdate"/>
                        <property name="columns"
                                  value="1-7,8-8,9-9,10-11,12-19,20-29,30-37,38-45,46-51,52-52,53-59,60-60,61-62,63-69,70-77"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmQueueWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.queue
                    VALUES
                    (:considerid,:queuetype,:jobtype,:jobcode,:offerdate,:referenceno,:receivedate,:modifydate,:modifytime,:status,
                    :xconsiderid,:firstjobtype,:firstjobcode,:firstxconsiderid,:firstofferdate)
                ]]>
            </value>
        </property>
    </bean>

    <bean id="dmTlpMigrationReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="${dm.source.file.path}/tlpmigration.dat"/>
        <property name="encoding" value="windows-874"/>
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="dmTlpMigration"/>
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
                        <property name="strict" value="false"/>
                        <property name="names"
                                  value="customerCode,tlpPolicyNo,tlpCertNo,tlpPlanNo,tlpProductName,tliPolicyNo,migratePlanCode,migratePlanNo,tmoPlanCode,tmoPlanNo,family"/>
                        <property name="columns"
                                  value="1-20,21-28,29-43,44-51,52-251,252-259,260-263,264-264,265-268,269-269,270-270"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dmTlpMigrationWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO dm.tlpmigration
                    VALUES
                    (:customerCode,:tlpPolicyNo,:tlpCertNo,:tlpPlanNo,:tlpProductName,:tliPolicyNo,:migratePlanCode,:migratePlanNo,:tmoPlanCode,:tmoPlanNo,:family)
                ]]>
            </value>
        </property>
    </bean>
</beans>