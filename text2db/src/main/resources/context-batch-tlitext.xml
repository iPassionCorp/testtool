<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:batch="http://www.springframework.org/schema/batch" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath:text2db.properties" />

	<bean id="tlitextCert" class="th.co.ipassion.testtool.dto.tlitext.Cert" scope="prototype"/>
	<bean id="tlitextCertLinker" class="th.co.ipassion.testtool.dto.tlitext.CertLinker" scope="prototype"/>
	<bean id="tlitextCertMapping" class="th.co.ipassion.testtool.dto.tlitext.CertMapping" scope="prototype"/>
	<bean id="tlitextCertRider" class="th.co.ipassion.testtool.dto.tlitext.CertRider" scope="prototype"/>
	<bean id="tlitextCompensateId" class="th.co.ipassion.testtool.dto.tlitext.CompensateId" scope="prototype"/>
	<bean id="tlitextCustomer" class="th.co.ipassion.testtool.dto.tlitext.Customer" scope="prototype"/>
	<bean id="tlitextDetCert" class="th.co.ipassion.testtool.dto.tlitext.DetCert" scope="prototype"/>
	<bean id="tlitextMgClaim" class="th.co.ipassion.testtool.dto.tlitext.MgClaim" scope="prototype"/>
	<bean id="tlitextMgHis" class="th.co.ipassion.testtool.dto.tlitext.MgHis" scope="prototype"/>
	<bean id="tlitextMgInsMemo" class="th.co.ipassion.testtool.dto.tlitext.MgInsMemo" scope="prototype"/>
	<bean id="tlitextMgInterest" class="th.co.ipassion.testtool.dto.tlitext.MgInterest" scope="prototype"/>
	<bean id="tlitextMgOrder" class="th.co.ipassion.testtool.dto.tlitext.MgOrder" scope="prototype"/>
	<bean id="tlitextMgPay" class="th.co.ipassion.testtool.dto.tlitext.MgPay" scope="prototype"/>
	<bean id="tlitextMgPayRider" class="th.co.ipassion.testtool.dto.tlitext.MgPayRider" scope="prototype"/>
	<bean id="tlitextMgReceiver" class="th.co.ipassion.testtool.dto.tlitext.MgReceiver" scope="prototype"/>
	<bean id="tlitextName" class="th.co.ipassion.testtool.dto.tlitext.Name" scope="prototype"/>
	<bean id="tlitextPerson" class="th.co.ipassion.testtool.dto.tlitext.Person" scope="prototype"/>
	<bean id="tlitextPolicy" class="th.co.ipassion.testtool.dto.tlitext.Policy" scope="prototype"/>

	<bean id="tlitextCompensateIdReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${tlitext.source.file.path}/compensateid.dat" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextCompensateId" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names" value="compensateid,referenceid" />
						<property name="columns" value="1-13,14-26" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextCompensateIdWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.compensateid
                    VALUES
                    (:compensateid, :referenceid)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextCustomerReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${tlitext.source.file.path}/customer.dat" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextCustomer" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names" value="customerid,referenceid,referencetype,birthdate,sex,contactnameid,contactaddressid" />
						<property name="columns" value="1-13,14-26,27-28,29-36,37-37,38-50,51-60" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextCustomerWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.customer
                    VALUES
                    (:customerid, :referenceid, :referencetype, :birthdate, :sex, :contactnameid, :contactaddressid)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextNameReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${tlitext.source.file.path}/name.dat" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextName" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="nameid,personid,prename,firstname,lastname,startdate" />
						<property name="columns" value="1-13,14-26,27-56,57-86,87-116,117-124" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextNameWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.name
                    VALUES
                    (:nameid, :personid, :prename, :firstname, :lastname, :startdate)
                ]]>
			</value>
		</property>
	</bean>


	<bean id="tlitextPersonReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${tlitext.source.file.path}/person.dat" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextPerson" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="personid,referenceid,referencetype,birthdate,sex,customerid,bluecard,reserve" />
						<property name="columns"
								  value="1-13,14-26,27-28,29-36,37-37,38-50,51-51,52-57" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextPersonWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.person
                    VALUES
                    (:personid, :referenceid, :referencetype, :birthdate, :sex, :customerid, :bluecard, :reserve)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextPolicyReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${tlitext.source.file.path}/mortpolicy1.dat" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextPolicy" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="policyno,rate,name,type,effectivedate,planname,riderplan,tlbranch" />
						<property name="columns" value="1-4,5-6,7-56,57-57,58-65,66-125,126-126,127-129" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextPolicyWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.policy
                    VALUES
                    (:policyno, :rate, :name, :type, :effectivedate, :planname, :riderplan, :tlbranch)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextCertReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${tlitext.source.file.path}/newcert.dat" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextCert" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="policyno,certno,appno,reqdate,nameid,age,smi,lifesum,accidentsum,period,loan_term,lifepremium,extrapremium,tpdpremium,extratpdpremium,addpremium,
em,tpd,effectivedate,maturedate,premiumdate,certyyyymm,statcer,statcer2,statdate2,informdate1,paydate1,amount1,informdate2,paydate2,amount2,deaddate,endownmentyear,deadcause,
receiptflag,referenceno,reserve" />
						<property name="columns"
								  value="1-4,5-12,13-24,25-32,33-45,46-47,48-56,57-65,66-74,75-76,77-78,79-88,89-98,99-108,109-118,119-128,129-131,132-135,136-143,144-151,152-159,160-165,166-166,167-167,168-175,176-183,184-191,192-201,202-209,210-217,218-227,228-235,236-242,243-246,247-247,248-267,268-269" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextCertWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.cert
                    VALUES
                    (:policyno, :certno, :appno, :reqdate, :nameid, :age, :smi, :lifesum, :accidentsum, :period, :loan_term, :lifepremium, 
                    :extrapremium, :tpdpremium, :extratpdpremium, :addpremium, :em, :tpd, :effectivedate, :maturedate, :premiumdate, :certyyyymm, 
                    :statcer, :statcer2, :statdate2, :informdate1, :paydate1, :amount1, :informdate2, :paydate2, :amount2, :deaddate, :endownmentyear, 
                    :deadcause, :receiptflag, :referenceno, :reserve)
                ]]>
			</value>
		</property>
	</bean>


	<bean id="tlitextDetCertReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<!--read detcert file-->
		<property name="resource" value="${tlitext.source.file.path}/newdetcert2.dat" />
		<!--set policy about separator-->
		<property name="recordSeparatorPolicy">
			<bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy" />
		</property>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<!--mapping file-->
				<property name="fieldSetMapper">
					<bean
							class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextDetCert" />
					</bean>
				</property>
				<!--split it-->
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<!--strict data-->
                        <property name="strict"
                                  value="false" />
						<!--set name of column-->
						<property name="names"
								  value="policyno,certno,code,address1,address2,telephoneno,mariagestatus,recname1,percent1,relationshipcode1,recname2,percent2,relationshipcode2,recname3,percent3,
relationshipcode3,analist,prmiseno,prmiseno2,loantype,med,reserve" />
						<!--set columns number and split to map with name of column-->
						<property name="columns"
								  value="1-4,5-12,13-22,23-92,93-162,163-222,223-223,224-323,324-328,329-330,331-430,431-435,436-437,438-537,538-542,543-544,545-554,555-566,567-578,579-579,580-580,581-581" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>



	<bean id="tlitextDetCertWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.detcert
                    VALUES
                    (:policyno, :certno, :code, :address1, :address2, :telephoneno, :mariagestatus, 
                    :recname1, :percent1, :relationshipcode1, :recname2, :percent2, :relationshipcode2, :recname3, :percent3, :relationshipcode3, 
                    :analist, :prmiseno, :prmiseno2, :loantype, :med, :reserve)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextCertRiderReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${tlitext.source.file.path}/certrider.dat" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextCertRider" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="policyno,certno,ridertype,sum,premium,extrapremium,riderstatus,riderstatusdate,reserve" />
						<property name="columns"
								  value="1-4,5-12,13-15,16-24,25-34,35-44,45-45,46-53,54-54" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextCertRiderWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.certrider
                    VALUES
                    (:policyno, :certno, :ridertype, :sum, :premium, :extrapremium, :riderstatus, :riderstatusdate, :reserve)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextCertLinkerReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${tlitext.source.file.path}/certlinker.dat" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextCertLinker" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names" value="policynohp,certnohp,policynocp,certnocp" />
						<property name="columns" value="1-4, 5-12, 13-16, 17-24" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextCertLinkerWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.certlinker
                    VALUES
                    (:policynohp, :certnohp, :policynocp, :certnocp)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextCertMappingReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${tlitext.source.file.path}/certmapping.dat" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextCertMapping" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names" value="policyno,certno,rpolicyno,rcertno" />
						<property name="columns" value="1-4, 5-12, 13-20, 21-35" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextCertMappingWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.certmapping
                    VALUES
                    (:policyno, :certno, :rpolicyno, :rcertno)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextMgClaimReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${tlitext.source.file.path}/mgclaim.dat" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextMgClaim" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="certno,accidentdate,receivedate,claimtype,sectioncode,orderno,referenceno,linkerno,okdate,policyno,ismigration" />
						<property name="columns"
								  value="1-8,9-16,17-24,25-25,26-27,28-35,36-45,46-52,53-60,61-64,65-65" />

					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextMgClaimWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.mgclaim
                    VALUES
                    (:certno, :accidentdate, :receivedate, :claimtype, :sectioncode, :orderno, :referenceno, :linkerno, :okdate, :policyno, :ismigration)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextMgOrderReader"
		  class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources"
				  value="${tlitext.source.file.path}/mgorder*.dat" />
		<property name="delegate" ref="tlitextMgOrderFlatFileItemReader" />
	</bean>

	<bean id="tlitextMgOrderFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		  scope="step">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextMgOrder" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="sectioncode,orderno,receivetime,causecode,causedetail,receiverid,considerid,admitdate,admitflag,billingorderno,interimflag,hospitalcode,receivedocdate,calsurdate" />
						<property name="columns"
								  value="1-2,3-10,11-16,17-22,23-72,73-79,80-86,87-94,95-95,96-105,106-106,107-110,111-118,119-126" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextMgOrderWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.mgorder
                    VALUES
                    (:sectioncode, :orderno, :receivetime, :causecode, :causedetail, :receiverid, :considerid, :admitdate, :admitflag, :billingorderno, 
                    :interimflag, :hospitalcode, :receivedocdate, :calsurdate)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextMgPayReader"
		  class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources"
				  value="${tlitext.source.file.path}/mgpay/mgpay*.dat" />
		<property name="delegate" ref="tlitextMgPayFlatFileItemReader" />
	</bean>

	<bean id="tlitextMgPayFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		  scope="step">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextMgPay" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="certno,receivedate, accidentdate,sectioncode,orderno,policystatus,policystatusdate,policystatus2,policystatusdate2,branchcode,servicebranch,claimtype,paytype,proofinsuredage,disabilitytype,disnumber,
payrate,payamount,accdamount,surrenderamount,returnamount,deductamount,claimokdate,claimpaydate,allowtype" />
						<property name="columns"
								  value="1-8,9-16,17-24,25-26,27-34,35-35,36-43,44-44,45-52,53-55,56-58,59-59,60-60,61-62,63-63,64-64,65-67,68-79,80-91,92-103,104-115,116-127,128-135,136-143,144-144" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextMgPayWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.mgpay
                    VALUES
                    (:certno, :receivedate, :accidentdate, :sectioncode, :orderno, :policystatus, :policystatusdate, :policystatus2, :policystatusdate2, 
                    :branchcode, :servicebranch, :claimtype, :paytype, :proofinsuredage, :disabilitytype, :disnumber, :payrate, :payamount, 
                    :accdamount, :surrenderamount, :returnamount, :deductamount, :claimokdate, :claimpaydate, :allowtype)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextMgPayRiderReader"
		  class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources"
				  value="${tlitext.source.file.path}/mgpayrider/mgpayrider*.dat" />
		<property name="delegate" ref="tlitextMgPayRiderFlatFileItemReader" />
	</bean>

	<bean id="tlitextMgPayRiderFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		  scope="step">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextMgPayRider" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="certno,accidentdate, receivedate, sectioncode,orderno,policystatus,policystatusdate,policystatus2,policystatusdate2,branchcode,servicebranch,amestartdate,ameday,
ameexpense,amepayment,tdday,tdstartdate,tdpayment, returnamount,deductamount,voiddate,claimokdate,claimpaydate" />
						<property name="columns"
								  value="1-8,9-16,17-24,25-26,27-34,35-35,36-43,44-44,45-52,53-55,56-58,59-66,67-69,70-78,79-87,88-90,91-98,99-107,108-119,120-131,132-139,140-147,148-155" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextMgPayRiderWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.mgpayrider
                    VALUES
                    (:certno, :accidentdate, :receivedate, :sectioncode, :orderno, :policystatus, :policystatusdate, :policystatus2, :policystatusdate2, 
                    :branchcode, :servicebranch, :amestartdate, :ameday, :ameexpense, :amepayment, :tdday, :tdstartdate, :tdpayment, :returnamount, :deductamount, 
                    :voiddate, :claimokdate, :claimpaydate)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextMgHisReader"
		  class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources"
				  value="${tlitext.source.file.path}/mghis*.dat" />
		<property name="delegate" ref="tlitextMgHisFlatFileItemReader" />
	</bean>

	<bean id="tlitextMgHisFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		  scope="step">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextMgHis" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="certno,accidentdate,receivedate,claimtype,seqno,remarkdate,remarkno,remark,employeeid,rectime" />
						<property name="columns"
								  value="1-8,9-16,17-24,25-25,26-27,28-35,36-37,38-137,138-144,145-150" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextMgHisWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.mghis
                    VALUES
                    (:certno, :accidentdate, :receivedate, :claimtype, :seqno, :remarkdate, :remarkno, :remark, :employeeid, :rectime)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextMgInsMemoReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="${tlitext.source.file.path}/mginsmemo.dat" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextMgInsMemo" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="certno,accidentdate,receivedate,memocode,detail1,detail2,savedate" />
						<property name="columns"
								  value="1-8,9-16,17-24,25-27,28-127,128-227,228-235" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextMgInsMemoWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.mginsmemo
                    VALUES
                    (:certno, :accidentdate, :receivedate, :memocode, :detail1, :detail2, :savedate)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextMgInterestReader"
		  class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources"
				  value="${tlitext.source.file.path}/mginterest*.dat" />
		<property name="delegate" ref="tlitextMgInterestFlatFileItemReader" />
	</bean>

	<bean id="tlitextMgInterestFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		  scope="step">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextMgInterest" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
								  value="certno,accidentdate,receivedate,ridertype,paytype,startdate,enddate,day,payamount,interestamount" />
						<property name="columns"
								  value="1-8,9-16,17-24,25-27,28-28,29-36,37-44,45-48,49-60,61-71" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextMgInterestWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.mginterest
                    VALUES
                    (:certno, :accidentdate, :receivedate, :ridertype, :paytype, :startdate, :enddate, :day, :payamount, :interestamount)
                ]]>
			</value>
		</property>
	</bean>

	<bean id="tlitextMgReceiverReader"
		  class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources"
				  value="${tlitext.source.file.path}/mgreceiver*.dat" />
		<property name="delegate" ref="tlitextMgReceiverFlatFileItemReader" />
	</bean>

	<bean id="tlitextMgReceiverFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		  scope="step">
		<property name="encoding" value ="windows-874"/>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="tlitextMgReceiver" />
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
							class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="strict"
								  value="false" />
						<property name="names"
								  value="certno,accidentdate,receivedate,seqno,prename,firstname, lastname,type,payamount,address,tumbon,zipcode,mobilephone,citizenid,paytype,banktype,bankcode,
bankbranch,bankaccount,guardianbeneficiary,ispay,haveindicia,countrycode,claimpaydate, bookstatus,chqdate,chqno,docno,isbeneficiarykilled,birthdate" />
						<property name="columns"
								  value="1-8,9-16,17-24,25-25,26-55,56-115,116-175,176-176,177-188,189-316,317-321,322-326,327-336,337-349,350-350,351-351,352-361,362-396,397-411,412-491,492-492,493-493,
494-496,497-504,505-505,506-513,514-523,524-528,529-529,530-537" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tlitextMgReceiverWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql">
			<value>
				<![CDATA[
                    INSERT INTO tlitext.mgreceiver
                    VALUES
                    (:certno, :accidentdate, :receivedate, :seqno, :prename, :firstname, :lastname, :type, :payamount, 
                    :address, :tumbon, :zipcode, :mobilephone, :citizenid, :paytype, :banktype, :bankcode, :bankbranch, :bankaccount, 
                    :guardianbeneficiary, :ispay, :haveindicia, :countrycode, :claimpaydate, :bookstatus, 
                    :chqdate, :chqno, :docno, :isbeneficiarykilled, :birthdate)
                ]]>
			</value>
		</property>
	</bean>

</beans>